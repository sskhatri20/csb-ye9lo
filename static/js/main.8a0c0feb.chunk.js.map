{"version":3,"sources":["color.js","App.js","index.js"],"names":["randomUpTo","max","Math","floor","random","randomColor","r","g","b","generateColors","n","Array","from","App","props","state","colors","secretIndex","gameState","difficulty","newGame","bind","changeDifficulty","handleSquareClick","this","setState","i","slice","fill","lastProps","lastState","secretColor","headerBackground","newGameText","message","squares","map","c","className","style","background","onClick","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"+LAAO,SAASA,EAAWC,GACzB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,GAGpC,SAASI,IACP,IAAMC,EAAIN,EAAW,KACfO,EAAIP,EAAW,KACfQ,EAAIR,EAAW,KACrB,MAAM,OAAN,OAAcM,EAAd,aAAoBC,EAApB,aAA0BC,EAA1B,KAGK,SAASC,EAAeC,GAC7B,OAAOC,MAAMC,KAAK,IAAID,MAAMD,GAAIL,G,WC4FnBQ,E,kDAjGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,OAAQP,EAAe,GACvBQ,YAAajB,EAAW,GACxBkB,UAAW,QACXC,WAAY,GAGd,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,kBAAoB,EAAKA,kBAAkBF,KAAvB,gBAXR,E,2CAcnB,WACE,IAAMF,EAAaK,KAAKT,MAAMI,WAC9BK,KAAKC,SAAS,CACZT,OAAQP,EAAeU,GACvBF,YAAajB,EAAWmB,GACxBD,UAAW,Y,8BAIf,SAAiBC,GACfK,KAAKC,SAAS,CAAEN,iB,+BAGlB,SAAkBO,GAChB,GAA6B,QAAzBF,KAAKT,MAAMG,UAAf,CAEA,IACIA,EADEF,EAASQ,KAAKT,MAAMC,OAAOW,QAE7BD,IAAMF,KAAKT,MAAME,aACnBD,EAAOY,KAAKZ,EAAOU,IACnBR,EAAY,QAEZF,EAAOU,GAAK,OACZR,EAAY,SAEdM,KAAKC,SAAS,CAAET,SAAQE,iB,gCAG1B,SAAmBW,EAAWC,GACxBA,EAAUX,aAAeK,KAAKT,MAAMI,YAAYK,KAAKJ,Y,oBAG3D,WAAU,IAAD,OACP,EAAuDI,KAAKT,MAApDE,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,WAAYH,EAA5C,EAA4CA,OAEtCe,EAAcf,EAAOC,GACrBe,EAAiC,QAAdd,EAAsBa,EAAc,YACvDE,EAA4B,QAAdf,EAAsB,YAAc,aAEpDgB,EAAU,GACI,QAAdhB,IAAqBgB,EAAU,YACjB,UAAdhB,IAAuBgB,EAAU,UAErC,IAAMC,EAAUnB,EAAOoB,KAAI,SAACC,EAAGX,GAC7B,OACE,qBACEY,UAAU,SACVC,MAAO,CAAEC,WAAYH,GACrBI,QAAS,EAAKlB,kBAAkBF,KAAK,KAAMK,IACtCA,MAKX,OACE,gCACE,qBAAIY,UAAU,SAASC,MAAO,CAAEC,WAAYR,GAA5C,sBAEE,+BAAOD,IAFT,gBAKA,sBAAKO,UAAU,UAAf,UACE,wBAAQG,QAASjB,KAAKJ,QAAtB,SAAgCa,IAChC,sBAAMK,UAAU,UAAhB,SAA2BJ,IAC3B,wBACEI,UAA0B,IAAfnB,EAAmB,SAAW,GACzCsB,QAASjB,KAAKF,iBAAiBD,KAAK,KAAM,GAF5C,kBAMA,wBACEiB,UAA0B,IAAfnB,EAAmB,SAAW,GACzCsB,QAASjB,KAAKF,iBAAiBD,KAAK,KAAM,GAF5C,qBAOF,qBAAKiB,UAAU,UAAf,SAA0BH,W,GA5FhBO,aCDZC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.8a0c0feb.chunk.js","sourcesContent":["export function randomUpTo(max) {\r\n  return Math.floor(Math.random() * max);\r\n}\r\n\r\nfunction randomColor() {\r\n  const r = randomUpTo(255);\r\n  const g = randomUpTo(255);\r\n  const b = randomUpTo(255);\r\n  return `rgb(${r}, ${g}, ${b})`;\r\n}\r\n\r\nexport function generateColors(n) {\r\n  return Array.from(new Array(n), randomColor);\r\n}\r\n","import \"./styles.css\";\n\nimport React, { Component } from \"react\";\n\nimport { randomUpTo, generateColors } from \"./color\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colors: generateColors(6),\n      secretIndex: randomUpTo(6),\n      gameState: \"start\",\n      difficulty: 6\n    };\n\n    this.newGame = this.newGame.bind(this);\n    this.changeDifficulty = this.changeDifficulty.bind(this);\n    this.handleSquareClick = this.handleSquareClick.bind(this);\n  }\n\n  newGame() {\n    const difficulty = this.state.difficulty;\n    this.setState({\n      colors: generateColors(difficulty),\n      secretIndex: randomUpTo(difficulty),\n      gameState: \"start\"\n    });\n  }\n\n  changeDifficulty(difficulty) {\n    this.setState({ difficulty });\n  }\n\n  handleSquareClick(i) {\n    if (this.state.gameState === \"won\") return;\n\n    const colors = this.state.colors.slice();\n    let gameState;\n    if (i === this.state.secretIndex) {\n      colors.fill(colors[i]);\n      gameState = \"won\";\n    } else {\n      colors[i] = \"none\";\n      gameState = \"wrong\";\n    }\n    this.setState({ colors, gameState });\n  }\n\n  componentDidUpdate(lastProps, lastState) {\n    if (lastState.difficulty !== this.state.difficulty) this.newGame();\n  }\n\n  render() {\n    const { secretIndex, gameState, difficulty, colors } = this.state;\n\n    const secretColor = colors[secretIndex];\n    const headerBackground = gameState === \"won\" ? secretColor : \"steelblue\";\n    const newGameText = gameState === \"won\" ? \"New game?\" : \"New colors\";\n\n    let message = \"\";\n    if (gameState === \"won\") message = \"Correct!\";\n    if (gameState === \"wrong\") message = \"Wrong!\";\n\n    const squares = colors.map((c, i) => {\n      return (\n        <div\n          className=\"square\"\n          style={{ background: c }}\n          onClick={this.handleSquareClick.bind(null, i)}\n          key={i}\n        ></div>\n      );\n    });\n\n    return (\n      <div>\n        <h1 className=\"header\" style={{ background: headerBackground }}>\n          The great\n          <span>{secretColor}</span>\n          color game\n        </h1>\n        <div className=\"actions\">\n          <button onClick={this.newGame}>{newGameText}</button>\n          <span className=\"message\">{message}</span>\n          <button\n            className={difficulty === 3 ? \"active\" : \"\"}\n            onClick={this.changeDifficulty.bind(null, 3)}\n          >\n            Easy\n          </button>\n          <button\n            className={difficulty === 6 ? \"active\" : \"\"}\n            onClick={this.changeDifficulty.bind(null, 6)}\n          >\n            Hard\n          </button>\n        </div>\n        <div className=\"squares\">{squares}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}